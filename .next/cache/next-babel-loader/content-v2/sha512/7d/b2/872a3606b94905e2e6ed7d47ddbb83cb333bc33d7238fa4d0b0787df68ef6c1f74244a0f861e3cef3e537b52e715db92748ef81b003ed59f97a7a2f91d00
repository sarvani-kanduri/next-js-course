{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\kandu\\\\Downloads\\\\06-onwards-to-a-bigger-project-starting-project\\\\06-onwards-to-a-bigger-project-starting-project\\\\pages\\\\[meetupId].js\";\nimport { Fragment } from \"react\";\nimport MeetupDetails from \"../components/meetups/MeetupDetails\";\nimport { MongoClient, ObjectId } from \"mongodb\";\nimport Head from \"next/head\";\n\nconst MeetupDetail = props => {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: props.meetupData.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"decription\",\n        content: \"browse a huge list of highly active react\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(MeetupDetails, {\n      image: props.meetupData.image,\n      title: props.meetupData.title,\n      address: props.meetupData.address,\n      description: props.meetupData.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect('mongodb+srv://sarvani:xyzxyzxyz@cluster0.aydwn.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    paths: meetups.map(id => ({\n      params: {\n        meetupId: id._id.toString()\n      }\n    }))\n    /*   [{\r\n     params:{\r\n         meetupId:'m1'\r\n     },\r\n     params:{\r\n      meetupId:'m2'\r\n    }\r\n      }] */\n\n  };\n}\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupId;\n  const client = await MongoClient.connect('mongodb+srv://sarvani:xyzxyzxyz@cluster0.aydwn.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const selectedMeetupps = await meetupsCollection.findOne({\n    _id: ObjectId(meetupId)\n  });\n  client.close();\n  return {\n    props: {\n      meetupData: {\n        id: selectedMeetupps._id.toString(),\n        title: selectedMeetupps.address,\n        image: selectedMeetupps.image,\n        description: selectedMeetupps.description\n      }\n    }\n  };\n}\nexport default MeetupDetail;","map":{"version":3,"sources":["C:/Users/kandu/Downloads/06-onwards-to-a-bigger-project-starting-project/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId].js"],"names":["Fragment","MeetupDetails","MongoClient","ObjectId","Head","MeetupDetail","props","meetupData","title","image","address","description","getStaticPaths","client","connect","db","meetupsCollection","collection","meetups","find","_id","toArray","close","fallback","paths","map","id","params","meetupId","toString","getStaticProps","context","selectedMeetupps","findOne"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,aAAP,MAA0B,qCAA1B;AACA,SAASC,WAAT,EAAqBC,QAArB,QAAqC,SAArC;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AAEA,MAAMC,YAAY,GAAEC,KAAD,IAAS;AAC5B,sBACI,QAAC,QAAD;AAAA,4BACI,QAAC,IAAD;AAAA,8BACF;AAAA,kBAAQA,KAAK,CAACC,UAAN,CAAiBC;AAAzB;AAAA;AAAA;AAAA;AAAA,cADE,eAEF;AAAM,QAAA,IAAI,EAAC,YAAX;AAAwB,QAAA,OAAO,EAAC;AAAhC;AAAA;AAAA;AAAA;AAAA,cAFE;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI,QAAC,aAAD;AACC,MAAA,KAAK,EAAEF,KAAK,CAACC,UAAN,CAAiBE,KADzB;AAEC,MAAA,KAAK,EAAEH,KAAK,CAACC,UAAN,CAAiBC,KAFzB;AAGC,MAAA,OAAO,EAAEF,KAAK,CAACC,UAAN,CAAiBG,OAH3B;AAIC,MAAA,WAAW,EAAEJ,KAAK,CAACC,UAAN,CAAiBI;AAJ/B;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAeC,CAhBD;;AAiBA,OAAO,eAAeC,cAAf,GAA+B;AAElC,QAAMC,MAAM,GAAE,MAAMX,WAAW,CAACY,OAAZ,CAAoB,gGAApB,CAApB;AACA,QAAMC,EAAE,GAACF,MAAM,CAACE,EAAP,EAAT;AACA,QAAMC,iBAAiB,GAACD,EAAE,CAACE,UAAH,CAAc,SAAd,CAAxB;AACD,QAAMC,OAAO,GAAE,MAAOF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA0B;AAACC,IAAAA,GAAG,EAAC;AAAL,GAA1B,EAAmCC,OAAnC,EAAtB;AAGCR,EAAAA,MAAM,CAACS,KAAP;AACA,SAAM;AACFC,IAAAA,QAAQ,EAAC,KADP;AAEFC,IAAAA,KAAK,EAACN,OAAO,CAACO,GAAR,CAAaC,EAAD,KAAO;AAACC,MAAAA,MAAM,EAAC;AAACC,QAAAA,QAAQ,EAACF,EAAE,CAACN,GAAH,CAAOS,QAAP;AAAV;AAAR,KAAP,CAAZ;AAER;AACN;AACA;AACA;AACA;AACA;AACA;AACA;;AAXU,GAAN;AAaH;AACD,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAsC;AAC1C,QAAMH,QAAQ,GAAEG,OAAO,CAACJ,MAAR,CAAeC,QAA/B;AAEA,QAAMf,MAAM,GAAE,MAAMX,WAAW,CAACY,OAAZ,CAAoB,gGAApB,CAApB;AACA,QAAMC,EAAE,GAACF,MAAM,CAACE,EAAP,EAAT;AACA,QAAMC,iBAAiB,GAACD,EAAE,CAACE,UAAH,CAAc,SAAd,CAAxB;AACD,QAAMe,gBAAgB,GAAE,MAAOhB,iBAAiB,CAACiB,OAAlB,CAA0B;AAACb,IAAAA,GAAG,EAACjB,QAAQ,CAACyB,QAAD;AAAb,GAA1B,CAA/B;AAGCf,EAAAA,MAAM,CAACS,KAAP;AACC,SAAM;AACFhB,IAAAA,KAAK,EAAC;AACbC,MAAAA,UAAU,EAAC;AACPmB,QAAAA,EAAE,EAACM,gBAAgB,CAACZ,GAAjB,CAAqBS,QAArB,EADI;AAEPrB,QAAAA,KAAK,EAACwB,gBAAgB,CAACtB,OAFhB;AAGPD,QAAAA,KAAK,EAACuB,gBAAgB,CAACvB,KAHhB;AAIPE,QAAAA,WAAW,EAACqB,gBAAgB,CAACrB;AAJtB;AADE;AADJ,GAAN;AAUH;AACD,eAAeN,YAAf","sourcesContent":["import { Fragment } from \"react\";\r\nimport MeetupDetails from \"../components/meetups/MeetupDetails\";\r\nimport { MongoClient,ObjectId } from \"mongodb\";\r\nimport Head from \"next/head\";\r\n\r\nconst MeetupDetail=(props)=>{\r\nreturn(\r\n    <Fragment>\r\n        <Head>\r\n      <title>{props.meetupData.title}</title>\r\n      <meta name=\"decription\" content='browse a huge list of highly active react'></meta>\r\n      </Head>\r\n        <MeetupDetails  \r\n         image={props.meetupData.image}\r\n         title={props.meetupData.title}\r\n         address={props.meetupData.address}\r\n         description={props.meetupData.description}\r\n      \r\n        />\r\n    </Fragment>\r\n);\r\n}\r\nexport async function getStaticPaths(){\r\n\r\n    const client= await MongoClient.connect('mongodb+srv://sarvani:xyzxyzxyz@cluster0.aydwn.mongodb.net/meetups?retryWrites=true&w=majority');\r\n    const db=client.db();\r\n    const meetupsCollection=db.collection('meetups');\r\n   const meetups= await  meetupsCollection.find({},{_id:1}).toArray();\r\n   \r\n     \r\n    client.close();\r\n    return{\r\n        fallback:false,\r\n        paths:meetups.map((id)=>({params:{meetupId:id._id.toString()}}))\r\n        \r\n      /*   [{\r\n       params:{\r\n           meetupId:'m1'\r\n       },\r\n       params:{\r\n        meetupId:'m2'\r\n    }\r\n        }] */\r\n    }\r\n}\r\nexport async function getStaticProps(context){\r\n   const meetupId= context.params.meetupId;\r\n\r\n   const client= await MongoClient.connect('mongodb+srv://sarvani:xyzxyzxyz@cluster0.aydwn.mongodb.net/meetups?retryWrites=true&w=majority');\r\n   const db=client.db();\r\n   const meetupsCollection=db.collection('meetups');\r\n  const selectedMeetupps= await  meetupsCollection.findOne({_id:ObjectId(meetupId)});\r\n  \r\n    \r\n   client.close();\r\n    return{\r\n        props:{\r\n meetupData:{\r\n     id:selectedMeetupps._id.toString(),\r\n     title:selectedMeetupps.address,\r\n     image:selectedMeetupps.image,\r\n     description:selectedMeetupps.description\r\n }\r\n        }\r\n    }\r\n}\r\nexport default MeetupDetail;"]},"metadata":{},"sourceType":"module"}