{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\kandu\\\\Downloads\\\\06-onwards-to-a-bigger-project-starting-project\\\\06-onwards-to-a-bigger-project-starting-project\\\\pages\\\\[meetupId].js\";\nimport { Fragment } from \"react\";\nimport MeetupDetails from \"../components/meetups/MeetupDetails\";\nimport { MongoClient } from \"mongodb\";\n\nconst MeetupDetail = props => {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(MeetupDetails, {\n      image: props.meetupData.image,\n      title: props.meetupData.title,\n      address: props.meetupData.address,\n      description: props.meetupData.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect('mongodb+srv://sarvani:xyzxyzxyz@cluster0.aydwn.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    paths: meetups.map(id => ({\n      params: {\n        meetupId: id._id.toString()\n      }\n    }))\n    /*   [{\r\n     params:{\r\n         meetupId:'m1'\r\n     },\r\n     params:{\r\n      meetupId:'m2'\r\n    }\r\n      }] */\n\n  };\n}\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupId;\n  return {\n    props: {\n      meetupData: {\n        id: 'm2',\n        image: 'https://upload.wikimedia.org/wikipedia/commons/d/d3/Stadtbild_M%C3%BCnchen.jpg',\n        title: 'A First Meetup !!',\n        address: 'some street 4',\n        description: 'The meetup description'\n      }\n    }\n  };\n}\nexport default MeetupDetail;","map":{"version":3,"sources":["C:/Users/kandu/Downloads/06-onwards-to-a-bigger-project-starting-project/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId].js"],"names":["Fragment","MeetupDetails","MongoClient","MeetupDetail","props","meetupData","image","title","address","description","getStaticPaths","client","connect","db","meetupsCollection","collection","meetups","find","_id","toArray","close","fallback","paths","map","id","params","meetupId","toString","getStaticProps","context"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,aAAP,MAA0B,qCAA1B;AACA,SAASC,WAAT,QAA4B,SAA5B;;AAEA,MAAMC,YAAY,GAAEC,KAAD,IAAS;AAC5B,sBACI,QAAC,QAAD;AAAA,2BACI,QAAC,aAAD;AACC,MAAA,KAAK,EAAEA,KAAK,CAACC,UAAN,CAAiBC,KADzB;AAEC,MAAA,KAAK,EAAEF,KAAK,CAACC,UAAN,CAAiBE,KAFzB;AAGC,MAAA,OAAO,EAAEH,KAAK,CAACC,UAAN,CAAiBG,OAH3B;AAIC,MAAA,WAAW,EAAEJ,KAAK,CAACC,UAAN,CAAiBI;AAJ/B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAWC,CAZD;;AAaA,OAAO,eAAeC,cAAf,GAA+B;AAElC,QAAMC,MAAM,GAAE,MAAMT,WAAW,CAACU,OAAZ,CAAoB,gGAApB,CAApB;AACA,QAAMC,EAAE,GAACF,MAAM,CAACE,EAAP,EAAT;AACA,QAAMC,iBAAiB,GAACD,EAAE,CAACE,UAAH,CAAc,SAAd,CAAxB;AACD,QAAMC,OAAO,GAAE,MAAOF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA0B;AAACC,IAAAA,GAAG,EAAC;AAAL,GAA1B,EAAmCC,OAAnC,EAAtB;AAGER,EAAAA,MAAM,CAACS,KAAP;AACD,SAAM;AACFC,IAAAA,QAAQ,EAAC,KADP;AAEFC,IAAAA,KAAK,EAACN,OAAO,CAACO,GAAR,CAAaC,EAAD,KAAO;AAACC,MAAAA,MAAM,EAAC;AAACC,QAAAA,QAAQ,EAACF,EAAE,CAACN,GAAH,CAAOS,QAAP;AAAV;AAAR,KAAP,CAAZ;AAER;AACN;AACA;AACA;AACA;AACA;AACA;AACA;;AAXU,GAAN;AAaH;AACD,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAsC;AAC1C,QAAMH,QAAQ,GAAEG,OAAO,CAACJ,MAAR,CAAeC,QAA/B;AACC,SAAM;AACFtB,IAAAA,KAAK,EAAC;AACbC,MAAAA,UAAU,EAAC;AACPmB,QAAAA,EAAE,EAAC,IADI;AAERlB,QAAAA,KAAK,EAAC,gFAFE;AAGRC,QAAAA,KAAK,EAAC,mBAHE;AAIRC,QAAAA,OAAO,EAAC,eAJA;AAKRC,QAAAA,WAAW,EAAC;AALJ;AADE;AADJ,GAAN;AAWH;AACD,eAAeN,YAAf","sourcesContent":["import { Fragment } from \"react\";\r\nimport MeetupDetails from \"../components/meetups/MeetupDetails\";\r\nimport { MongoClient } from \"mongodb\";\r\n\r\nconst MeetupDetail=(props)=>{\r\nreturn(\r\n    <Fragment>\r\n        <MeetupDetails  \r\n         image={props.meetupData.image}\r\n         title={props.meetupData.title}\r\n         address={props.meetupData.address}\r\n         description={props.meetupData.description}\r\n      \r\n        />\r\n    </Fragment>\r\n);\r\n}\r\nexport async function getStaticPaths(){\r\n\r\n    const client= await MongoClient.connect('mongodb+srv://sarvani:xyzxyzxyz@cluster0.aydwn.mongodb.net/meetups?retryWrites=true&w=majority');\r\n    const db=client.db();\r\n    const meetupsCollection=db.collection('meetups');\r\n   const meetups= await  meetupsCollection.find({},{_id:1}).toArray();\r\n   \r\n     \r\n     client.close();\r\n    return{\r\n        fallback:false,\r\n        paths:meetups.map((id)=>({params:{meetupId:id._id.toString()}}))\r\n        \r\n      /*   [{\r\n       params:{\r\n           meetupId:'m1'\r\n       },\r\n       params:{\r\n        meetupId:'m2'\r\n    }\r\n        }] */\r\n    }\r\n}\r\nexport async function getStaticProps(context){\r\n   const meetupId= context.params.meetupId;\r\n    return{\r\n        props:{\r\n meetupData:{\r\n     id:'m2',\r\n    image:'https://upload.wikimedia.org/wikipedia/commons/d/d3/Stadtbild_M%C3%BCnchen.jpg',\r\n    title:'A First Meetup !!',\r\n    address:'some street 4',\r\n    description:'The meetup description'\r\n }\r\n        }\r\n    }\r\n}\r\nexport default MeetupDetail;"]},"metadata":{},"sourceType":"module"}